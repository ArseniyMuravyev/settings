{
    "TypeScript Arrow Function Component Export": {
        "prefix": "tafce",
        "scope": "typescript,typescriptreact",
        "body": [
            "import { FC } from 'react';",
            "",
            "interface I${TM_FILENAME_BASE} {",
            "",
            "}",
            "",
            "export const ${TM_FILENAME_BASE}: FC<I${TM_FILENAME_BASE}> = () => {",
            "    return (",
            "        <div>",
            "",
            "        </div>",
            "    );",
            "};",
            ""
        ],
        "description": "Creates a typed functional component"
    },
    "React Arrow Function Component Export": {
        "prefix": "rafce",
        "scope": "javascript,javascriptreact",
        "body": [
            "export const ${TM_FILENAME_BASE} = () => {",
            "    return (",
            "        <div>",
            "",
            "        </div>",
            "    );",
            "};",
            ""
        ],
        "description": "Creates a functional component"
    },
    "Interface Creation": {
        "scope": "typescript,typescriptreact,javascript,javascriptreact",
        "prefix": "inter",
        "body": [
            "interface I${TM_FILENAME_BASE} {",
            "    $1",
            "}"
        ],
        "description": "Creates an interface with filename"
    },
    "Import Styles from Module": {
        "scope": "typescript,typescriptreact,javascript,javascriptreact",
        "prefix": "stls",
        "body": [
            "import styles from './${TM_FILENAME_BASE}.module.css';"
        ],
        "description": "Imports styles from module"
    },
    "Log Statement": {
        "scope": "typescript,typescriptreact,javascript,javascriptreact",
        "prefix": "log",
        "body": [
            "console.log($1);"
        ],
        "description": "Inserts a console.log() statement"
    },
    "Arrow Function": {
        "scope": "typescript,typescriptreact,javascript,javascriptreact",
        "prefix": "arr",
        "body": [
            "const ${1:name} = (${2:params}) => {",
            "\t$0",
            "};"
        ],
        "description": "Create Arrow Function"
    },
    "Function": {
        "scope": "typescript,typescriptreact,javascript,javascriptreact",
        "prefix": "fuc",
        "body": [
            "function ${1:name}(${2:params}) {",
            "\t$0",
            "}"
        ],
        "description": "Create Regular Function"
    },
    "For Loop": {
        "scope": "typescript,typescriptreact,javascript,javascriptreact",
        "prefix": "for",
        "body": [
            "for (let ${1:i} = 0; ${1:i} < ${2:length}; ${1:i}++) {",
            "\t$0",
            "}"
        ],
        "description": "Create For Loop"
    },
    "useState Hook": {
        "scope": "typescriptreact,javascriptreact",
        "prefix": "state",
        "body": [
            "const [${1:state}, set${1/(^\\w+).*/$1/}] = useState(${2:initialValue});",
            ""
        ],
        "description": "Creates a useState hook"
    },
    "useEffect Hook": {
        "scope": "typescriptreact,javascriptreact",
        "prefix": "effect",
        "body": [
            "useEffect(() => {",
            "\t$0",
            "}, []);"
        ],
        "description": "Creates a useEffect hook"
    },
    "useReducer Hook": {
        "scope": "typescriptreact,javascriptreact",
        "prefix": "reducer",
        "body": [
            "const [${1:state}, dispatch] = useReducer(${2:reducer}, ${3:initialState});",
            ""
        ],
        "description": "Creates a useReducer hook"
    },
    "setTimeout Function": {
        "scope": "typescript,typescriptreact,javascript,javascriptreact",
        "prefix": "stt",
        "body": [
            "setTimeout(() => {",
            "\t$0",
            "}, ${1:delay});",
            ""
        ],
        "description": "Creates a setTimeout function"
    },
    "setInterval Function": {
        "scope": "typescript,typescriptreact,javascript,javascriptreact",
        "prefix": "sil",
        "body": [
            "setInterval(() => {",
            "\t$0",
            "}, ${1:interval});",
            ""
        ],
        "description": "Creates a setInterval function"
    }
}
